<!DOCTYPE html>
<html>
<head>
    <base target="_top">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý Công việc</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <style>
        /* CSS Variables & Global Styles */
        :root {
            --primary-color: #0056b3;
            --primary-hover: #4338ca;
            --danger-color: #ef4444;
            --danger-hover: #dc2626;
            --success-color: #22c55e;
            --warning-color: #f97316;
            --bg-main: #ffffff;
            --bg-content: #ffffff;
            --bg-sidebar-left: #111827;
            --bg-sidebar-right: #f3f4f6;
            --bg-modal-overlay: rgba(17, 24, 39, 0.6);
            --text-primary: #111827;
            --text-secondary: #6b7280;
            --text-on-dark: #e5e7eb;
            --text-on-dark-hover: #ffffff;
            --text-on-primary: #ffffff;
            --border-color: #e5e7eb;
            --divider-color-dark: #374151;
            --border-radius-sm: 0.25rem;
            --border-radius-md: 0.375rem;
            --border-radius-lg: 0.5rem;
            --border-radius-full: 9999px;
            --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);
            --font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        body { margin: 0; padding: 0; font-family: var(--font-family); background-color: var(--bg-main); color: var(--text-primary); display: flex; flex-direction: column; height: 100vh; overflow: hidden; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }

        /* Header */
        #main-header { background-color: #0056b3; color: white; padding: 12px 24px; display: flex; justify-content: space-between; align-items: center; box-shadow: var(--shadow-sm); border-bottom: 1px solid var(--border-color); flex-shrink: 0; z-index: 10; }
        #header-left { font-size: 1rem; font-weight: 500; }
        #header-left span { cursor: pointer; display: flex; align-items: center; gap: 8px; color: white; transition: color 0.2s ease; }
        #header-left span:hover { color: #e5e7eb; }
        #header-left .header-icon { font-size: 1.1rem; }
        #current-page-title { font-size: 1.1rem; font-weight: 500; flex-grow: 1; text-align: center; }
        #header-right { display: flex; align-items: center; gap: 20px; }
        .header-item { white-space: nowrap; }
        #user-controls { display: flex; align-items: center; gap: 12px; }
        #userNameDisplay { font-weight: 500; }
        .header-logout-btn { background-color: var(--success-color); color: var(--text-on-primary); border: 1px solid var(--success-color); padding: 6px 12px; border-radius: var(--border-radius-md); cursor: pointer; font-size: 0.85rem; font-weight: 600; transition: all 0.2s ease; }
        .header-logout-btn:hover { background-color: var(--danger-color); border-color: var(--danger-color); }
        #live-clock { font-size: 0.9rem; font-weight: 500; text-align: right; min-width: 150px; }
        #live-clock #clock-time { display: block; font-weight: 1000; }
        #live-clock #clock-date { display: block; font-size: 0.8rem; }

        /* Main Content Area */
        #main-content-area { display: flex; flex-grow: 1; overflow: hidden; }
        #content-container { flex-grow: 1; padding: 5px; display: flex; flex-direction: column; overflow-y: auto; box-sizing: border-box; }
        #functionContent { width: 100%; flex-grow: 1; }
        #loadingSpinner { border: 4px solid var(--border-color); border-top: 4px solid var(--primary-color); border-radius: 50%; width: 40px; height: 40px; animation: spin 1s linear infinite; margin: 50px auto; display: none; }
        @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

        /* Left Sidebar */
        #left-sidebar-container { width: 300px; background-color: var(--bg-sidebar-left); color: var(--text-on-dark); padding: 5px; box-shadow: var(--shadow-md); flex-shrink: 0; flex-direction: column; box-sizing: border-box; overflow-y: auto; transition: width 0.3s ease, padding 0.3s ease; position: relative; z-index: 5; }
        #left-sidebar-container::-webkit-scrollbar { width: 6px; }
        #left-sidebar-container::-webkit-scrollbar-thumb { background: #4b5563; border-radius: 10px; }
        #left-sidebar-container.collapsed { width: 80px; padding: 16px 0; }
        #left-sidebar-container.collapsed .menu-button-sidebar span, #left-sidebar-container.collapsed .dropdown-button span, #left-sidebar-container.collapsed .menu-section-title span, #left-sidebar-container.collapsed .dropdown-arrow { opacity: 0; width: 0; height: 0; padding: 0; margin: 0; overflow: hidden; pointer-events: none; transition: all 0.2s ease; }
        #left-sidebar-container.collapsed .menu-button-sidebar, #left-sidebar-container.collapsed .dropdown-button { justify-content: center; width: 44px; margin-left: auto; margin-right: auto; }
        #left-sidebar-container.collapsed .menu-button-sidebar .icon, #left-sidebar-container.collapsed .dropdown-button .icon { margin-right: 0; font-size: 1.2rem; }
        #left-sidebar-container.collapsed .menu-section-title { padding: 0; height: auto; margin-bottom: 10px; }
        #left-sidebar-container.collapsed .menu-section { border-bottom: none; }
        .sidebar-content-wrapper { width: 100%; display: flex; flex-direction: column; align-items: center; flex-grow: 1; overflow-y: auto; }
        .menu-section { width: 100%; margin-bottom: 10px; padding-bottom: 10px; border-bottom: 1px solid var(--divider-color-dark); }
        .menu-section:last-of-type { border-bottom: none; }
        .menu-section-title { color: #9ca3af; text-align: left; margin-bottom: 8px; font-size: 0.8rem; font-weight: 600; padding: 8px 12px; width: 100%; display: flex; align-items: center; box-sizing: border-box; text-transform: uppercase; letter-spacing: 0.05em; }
        .menu-button-sidebar, .dropdown-button { background-color: transparent; color: var(--text-on-dark); padding: 10px 12px; margin-bottom: 4px; border: none; border-radius: var(--border-radius-md); cursor: pointer; width: 90%; font-size: 0.9rem; font-weight: 500; text-align: left; text-decoration: none; display: flex; justify-content: flex-start; align-items: center; transition: background-color 0.2s ease, color 0.2s ease; }
        .menu-button-sidebar:hover, .dropdown-button:hover, .dropdown-button.active { background-color: #374151; color: var(--text-on-dark-hover); }
        .menu-button-sidebar .icon, .dropdown-button .icon { margin-right: 12px; font-size: 1rem; min-width: 20px; text-align: center; color: #9ca3af; transition: color 0.2s ease; }
        .menu-button-sidebar:hover .icon, .dropdown-button:hover .icon, .dropdown-button.active .icon { color: var(--text-on-dark-hover); }
        .menu-button-sidebar.green { color: var(--success-color); }
        .menu-button-sidebar.orange { color: var(--warning-color); }
        .menu-button-sidebar.red { color: var(--danger-color); }
        .menu-button-sidebar.green:hover, .menu-button-sidebar.orange:hover, .menu-button-sidebar.red:hover { background-color: #374151; color: var(--text-on-dark-hover); }
        .dropdown { position: relative; display: flex; width: 100%; margin-bottom: 4px; justify-content: center; }
        .dropdown-button { align-items: left; }
        .dropdown-arrow { font-size: 0.8rem; transition: transform 0.2s ease; margin-left: 10px; display: none; }
        .dropdown-menu { display: none; position: fixed; min-width: 230px; z-index: 1001; background-color: #1f2937; border-radius: var(--border-radius-lg); padding: 6px; flex-direction: column; box-shadow: var(--shadow-lg); border: 1px solid var(--divider-color-dark); }
        .dropdown-menu.show { display: flex; }
        .dropdown-menu .menu-button-sidebar { width: 100%; box-sizing: border-box; }
        .dropdown-menu .menu-button-sidebar:hover { background-color: #4b5563; }

        /* Right Sidebar */
        #right-sidebar-container { width: 250px; background-color: var(--bg-sidebar-right); color: var(--text-primary); padding: 16px; border-left: 1px solid var(--border-color); flex-shrink: 0; display: flex; flex-direction: column; align-items: center; box-sizing: border-box; overflow-y: auto; transition: width 0.3s ease, padding 0.3s ease; position: relative; }
        #right-sidebar-container.collapsed { width: 100px; padding: 16px 0; }
        #right-sidebar-container.collapsed h3, #right-sidebar-container.collapsed .link-button-right span { opacity: 0; width: 0; height: 0; padding: 0; margin: 0; overflow: hidden; pointer-events: none; transition: all 0.2s ease; }
        #right-sidebar-container.collapsed .link-button-right { width: 50px; justify-content: center; margin-left: auto; margin-right: auto; }
        #right-sidebar-container.collapsed .link-button-right .icon { margin: 0; font-size: 1.1rem; }
        #right-sidebar-container.collapsed .right-menu-section { margin-bottom: 10px; }
        #right-sidebar-container.collapsed h3 { height: auto; margin-bottom: 10px; }
        #right-sidebar-container h3 { color: var(--text-secondary); text-align: center; margin-bottom: 16px; font-size: 0.8rem; font-weight: 600; padding-bottom: 10px; border-bottom: 1px solid var(--border-color); width: 100%; display: flex; align-items: center; justify-content: center; gap: 8px; text-transform: uppercase; }
        .right-menu-section { width: 100%; display: flex; flex-direction: column; align-items: center; margin-bottom: 16px; }
        .link-button-right { background-color: var(--bg-content); color: var(--text-secondary); padding: 8px 12px; margin-bottom: 8px; border: 1px solid var(--border-color); border-radius: var(--border-radius-md); cursor: pointer; width: 85%; font-size: 0.9rem; font-weight: 500; text-decoration: none; display: flex; align-items: center; justify-content: flex-start; transition: all 0.2s ease; box-shadow: var(--shadow-sm); }
        .link-button-right:hover { background-color: #e5e7eb; color: var(--text-primary); border-color: #d1d5db; }
        .link-button-right .icon { margin-right: 10px; font-size: 0.9rem; min-width: 16px; text-align: center; }
        .link-button-right.primary { border-color: var(--primary-color); color: var(--primary-color); }
        .link-button-right.primary:hover { background-color: var(--primary-color); color: var(--text-on-primary); }
        .link-button-right.success { border-color: var(--success-color); color: var(--success-color); }
        .link-button-right.success:hover { background-color: var(--success-color); color: var(--text-on-primary); }
        .link-button-right.info { border-color: #0ea5e9; color: #0ea5e9; }
        .link-button-right.info:hover { background-color: #0ea5e9; color: var(--text-on-primary); }
        
        /* Modals */
        .modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: var(--bg-modal-overlay); display: none; justify-content: center; align-items: center; z-index: 2000; }
        .modal-content { background-color: var(--bg-content); padding: 25px 30px; border-radius: var(--border-radius-lg); box-shadow: var(--shadow-lg); text-align: center; max-width: 400px; width: 90%; animation: fadeInScale 0.3s ease-out; }
        .modal-content p { font-size: 1.1rem; margin: 0 0 20px 0; color: var(--text-primary); }
        .modal-buttons { display: flex; justify-content: center; gap: 12px; }
        .modal-buttons button { padding: 10px 25px; border: none; border-radius: var(--border-radius-md); cursor: pointer; font-size: 1rem; font-weight: 600; transition: background-color 0.2s; }
        #confirmHomeYes, #confirmBtnYes, #adminLoginSubmit { background-color: #007bff; color: white; }
        #confirmHomeYes:hover, #confirmBtnYes:hover, #adminLoginSubmit:hover { background-color: #0056b3; }
        #confirmHomeNo, #confirmBtnNo, #adminLoginCancel { background-color: #e0e0e0; color: #333; }
        #confirmHomeNo:hover, #confirmBtnNo:hover, #adminLoginCancel:hover { background-color: #c7c7c7; }
        @keyframes fadeInScale { from { opacity: 0; transform: translateY(10px) scale(0.98); } to { opacity: 1; transform: translateY(0) scale(1); } }
        
        /* Floating Button & Popups */
        .floating-button { position: fixed; bottom: 20px; right: 20px; background-color: var(--success-color); color: var(--text-on-primary); padding: 12px; border: none; border-radius: var(--border-radius-full); cursor: pointer; width: 50px; height: 50px; display: flex; align-items: center; justify-content: center; box-shadow: var(--shadow-lg); z-index: 999; transition: all 0.3s ease; }
        .floating-button:hover { transform: translateY(-3px) scale(1.05); }
        .floating-button .icon { font-size: 1.5rem; }
        .popup-container { position: fixed; bottom: 85px; right: 20px; width: 320px; background-color: var(--bg-content); border-radius: var(--border-radius-lg); box-shadow: var(--shadow-lg); z-index: 1000; display: none; flex-direction: column; overflow: hidden; animation: fadeInScale 0.3s ease-out; }
        .popup-container.show { display: flex; }
        .popup-header { background-color: var(--primary-color); color: var(--text-on-primary); padding: 12px 16px; display: flex; justify-content: space-between; align-items: center; }
        .popup-header h3 { margin: 0; font-size: 1.1rem; font-weight: 600; }
        .close-popup-button { background: none; border: none; color: white; font-size: 1.5rem; cursor: pointer; opacity: 0.8; transition: opacity 0.2s ease; }
        .close-popup-button:hover { opacity: 1; }
        .popup-content { padding: 16px; color: var(--text-primary); font-size: 0.9rem; }
        .popup-content p { margin: 0 0 12px 0; display: flex; align-items: center; gap: 10px; }
        .popup-content p:last-child { margin-bottom: 0; }
        .popup-content .fas, .popup-content .fab { color: var(--primary-color); font-size: 1rem; }
        .popup-content a { color: var(--primary-color); text-decoration: none; font-weight: 500; }
        .popup-content a:hover { text-decoration: underline; }

        /* Notification Styles */
        #notification-container { display: flex; flex-direction: column; gap: 16px; }
        .notification-card { background-color: var(--bg-content); border-radius: var(--border-radius-md); border: 1px solid var(--border-color); padding: 16px; display: flex; align-items: flex-start; gap: 15px; }
        .notification-card .icon { font-size: 1.3rem; min-width: 22px; margin-top: 3px; }
        .notification-card.info .icon { color: var(--primary-color); }
        .notification-card.success .icon { color: var(--success-color); }
        .notification-card.warning .icon { color: var(--warning-color); }
        .notification-card.danger .icon { color: var(--danger-color); }
        .notification-card .notification-content h4 { margin: 0 0 4px 0; font-size: 1rem; font-weight: 600; color: var(--text-primary); }
        .notification-card .notification-content p { margin: 0; font-size: 0.9rem; color: var(--text-secondary); line-height: 1.5; }
        .notification-link-btn { display: inline-block; margin-top: 12px; padding: 6px 14px; background-color: var(--success-color); color: white !important; text-decoration: none; border-radius: var(--border-radius-sm); font-size: 0.85rem; font-weight: 500; transition: background-color 0.2s ease; }
        .notification-link-btn:hover { background-color: var(--warning-color); color: white; }
/* [PB3 START] - CSS cho giao diện nâng cao */

/* Bố cục cột */
.columns-container-pb2 {
  display: flex;
  flex-direction: row;
  gap: 24px;
  width: 100%;
}
.content-column {
  flex: 1;
  min-width: 0;
  display: flex;
  flex-direction: column;
}
.column-title {
  font-size: 1.2rem;
  font-weight: 600;
  color: #c00000;
  padding-bottom: 8px;
  margin-bottom: 16px;
  border-bottom: 2px solid var(--border-color);
  display: flex;
  align-items: center;
  gap: 10px;
}
.notification-list {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

/* Thẻ thông báo chính */
.notification-card-pb3 {
  background-color: #cccccc;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-lg);
  padding: 16px;
  box-shadow: var(--shadow-sm);
  display: flex;
  flex-direction: column;
}

/* Phần Header */
.notification-header-pb3 {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 12px;
}
.notification-header-pb3 .icon {
  font-size: 1.3rem;
  color: var(--text-secondary);
}
.notification-header-pb3 h4 {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 600;
  flex-grow: 1;
}

/* Phần Message */
.notification-message-pb3 {
  margin: 0 0 16px 0;
  color: black;
  line-height: 1.7;
  font-size: 0.95rem;
}

/* Phần Footer */
.notification-footer-pb3 {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 10px;
  padding-top: 10px;
  border-top: 1px solid var(--border-color);
}
.footer-left { text-align: left; flex: 1; }
.footer-center { text-align: center; flex: 1; }
.footer-right { text-align: right; flex: 1; }


/* Các loại huy hiệu và nút */
.new-badge {
  background-color: #ef4444;
  color: white;
  padding: 3px 8px;
  font-size: 0.7rem;
  font-weight: 700;
  border-radius: var(--border-radius-full);
  text-transform: uppercase;
  animation: blink-animation 1.2s infinite;
  margin-left: 8px;
}
.type-badge {
  padding: 4px 10px;
  border-radius: var(--border-radius-md);
  font-size: 0.8rem;
  font-weight: 500;
  color: #000;
  margin-left: auto;
}
.type-báchhóaxanh { background-color: #90ee90; } /* Xanh lá cây nhạt */
.type-tgdđ-đmx { background-color: #ffd700; } /* Vàng */
.type-avakid { background-color: #f08080; } /* Đỏ nhạt */
.type-ankhang { background-color: #add8e6; } /* Xanh dương nhạt */
.type-kho-vp { background-color: #0056b3; color: white;} /* Xanh dương đậm */

.update-date-badge, .deadline-badge {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 10px;
  border-radius: var(--border-radius-md);
  font-size: 0.8rem;
  font-weight: 500;
  color: white;
}
.update-date-badge { background-color: var(--success-color); }
.deadline-badge {
  background-color: var(--danger-color);
  animation: blink-animation 1.5s infinite;
}
.notification-link-btn-pb3 {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 12px;
  background-color: var(--primary-color);
  color: white !important;
  text-decoration: none;
  border-radius: var(--border-radius-md);
  font-size: 0.85rem;
  font-weight: 500;
  transition: opacity 0.2s ease;
}
.notification-link-btn-pb3:hover { opacity: 0.85; }

/* Animation */
@keyframes blink-animation {
  50% { opacity: 0.4; }
}

/* Responsive */
@media (max-width: 768px) {
  .columns-container-pb2 { flex-direction: column; }
  .notification-footer-pb3 { flex-direction: column; align-items: stretch; text-align: center; }
  .footer-left, .footer-center, .footer-right { text-align: center; flex: none; }
}
/* [PB3 END] */
    </style>
</head>
<body>
    <div id="main-header">
        <div id="header-left">
            <span id="btnGoHomeHeader"><i class="fas fa-home header-icon"></i>Trang Chủ</span>
        </div>
        <div id="current-page-title"> </div>
        <div id="header-right">
            <div id="user-controls" class="header-item">
                <span id="userNameDisplay"></span>
                <button id="logoutButton" class="header-logout-btn">Đăng xuất</button>
            </div>
            <div id="live-clock" class="header-item">
                <span id="clock-time"></span>
                <span id="clock-date"></span>
            </div>
        </div>
    </div>

    <div id="main-content-area">
        <div id="left-sidebar-container" class="collapsed">
            <div class="sidebar-content-wrapper"></div>
        </div>
        
        <div id="content-container">
            <div id="loadingSpinner"></div>
            <div id="functionContent"></div>
        </div>

        <div id="right-sidebar-container" class="collapsed">
            <div class="sidebar-content-wrapper"></div>
        </div>
    </div>

    <button id="supportContactButton" class="floating-button">
        <i class="fas fa-headset icon"></i>
    </button>
    <div id="supportContactPopup" class="popup-container">
        <div class="popup-header">
            <h3>Hỗ Trợ</h3>
            <button class="close-popup-button" id="closeSupportPopup">×</button>
        </div>
        <div class="popup-content">
            <p>Nếu bạn cần hỗ trợ, vui lòng liên hệ:</p>
            <p><i class="fas fa-phone-alt"></i> Điện thoại: 0933 960 788</p>
            <p><i class="fas fa-envelope"></i> Email: minhquang030@gmail.com</p>
            <p><i class="fab fa-facebook-messenger"></i> Messenger: <a href="https://www.facebook.com/minh.quang093" target="_blank">Inbox tại đây</a></p>
        </div>
    </div>

    <div id="homeConfirmModal" class="modal-overlay">
        <div class="modal-content">
            <p>Bạn có muốn quay về trang chủ không?</p>
            <div class="modal-buttons">
                <button id="confirmHomeYes">Có</button>
                <button id="confirmHomeNo">Không</button>
            </div>
        </div>
    </div>
    <div id="customConfirmModal" class="modal-overlay">
        <div class="modal-content">
            <p id="modalMessage">Bạn có chắc chắn muốn đăng xuất?</p>
            <div class="modal-buttons">
                <button id="confirmBtnYes">OK</button>
                <button id="confirmBtnNo">Cancel</button>
            </div>
        </div>
    </div>

    <div id="adminLoginModal" class="modal-overlay">
        <div class="modal-content">
            <h3 style="margin-top: 0; color: var(--primary-color);">Bạn không có quyền truy cập. Đăng nhập hoặc liên hệ Admin</h3>
            <p id="adminLoginError" style="color: var(--danger-color); margin-bottom: 10px; height: 1em;"></p>
            <input type="text" id="adminUsername" placeholder="Tên đăng nhập" autocomplete="off" style="width: 90%; padding: 10px; margin-bottom: 10px; border: 1px solid var(--border-color); border-radius: var(--border-radius-md);">
            <input type="password" id="adminPassword" placeholder="Mật khẩu" style="width: 90%; padding: 10px; margin-bottom: 20px; border: 1px solid var(--border-color); border-radius: var(--border-radius-md);">
            <div class="modal-buttons">
                <button id="adminLoginSubmit">Đăng nhập</button>
                <button id="adminLoginCancel">Hủy</button>
            </div>
        </div>
    </div>
    <script>
    // =================================================================================
    // ================== PHẦN 1: CẤU HÌNH MENU (DỄ DÀNG CHỈNH SỬA) ===================
    // =================================================================================

    const leftMenuData = [
        {
            title: 'ADMIN',
            items: [
              {
                id: 'btnADMIN', text: 'QUẢN TRỊ', icon: 'fa-solid fa-sliders', isDropdown: true, 
                isAdmin: true, // <-- Đánh dấu menu cần bảo vệ
                subItems: [
                    { id: 'btnDatabase', text: 'DATABASE', functionName: 'getDatabaseHtml', pageTitle: 'QUẢN LÝ DỮ LIỆU', icon: 'fa-solid fa-database' },
                    { id: 'btnUserInfo', text: 'QUẢN LÝ USER', functionName: 'getUserHtml', pageTitle: 'QUẢN LÝ USER', icon: 'fa-solid fa-users' },
                    { id: 'btnThongBao', text: 'TẠO THÔNG BÁO MỚI', functionName: 'getThongBaoHtml', pageTitle: 'TẠO THÔNG BÁO MỚI', icon: 'fa-regular fa-newspaper' },
                ]
              }
            ]
        
        },
        {
            title: '2025 - IT MTAY2',
            items: [
                { 
                    id: 'btnWorkLeader', text: 'TRIỂN KHAI IT MTAY2', icon: 'fas fa-laptop-code', isDropdown: true, 
                    subItems: [
                        { id: 'btnDeployMTay2', text: 'TRIỂN KHAI MIỀN TÂY 2', functionName: 'getDeployMTay2Html', pageTitle: 'TRIỂN KHAI MIỀN TÂY 2', icon: 'fas fa-map-marked-alt' },
                        { id: 'btnBHXToiUu', text: 'TỐI ƯU BHX 2025', functionName: 'getBHXToiUuHtml', pageTitle: 'TÌM KIẾM TỐI ƯU BÁCH HÓA XANH', icon: 'fas fa-cogs' },
                    ] 
                },
                { 
                    id: 'btnDailyWork', text: 'CÔNG VIỆC HÀNG NGÀY', icon: 'fas fa-calendar-alt', isDropdown: true, 
                    subItems: [
                        { id: 'btnMonitor', text: 'KIỂM TRA LỖI HỆ THỐNG', functionName: 'getMonitorHtml', pageTitle: 'KIỂM TRA LỖI HỆ THỐNG', icon: 'fas fa-eye' },
                        { id: 'btnTimSheet', text: 'TÌM SHEET CÔNG VIỆC', functionName: 'getTimSheetHtml', pageTitle: 'TRA CỨU DỮ LIỆU TỪ GOOGLE SHEET', icon: 'fa-solid fa-folder-tree' }
                    ] 
                },
                { id: 'btnBTKK', text: 'LỊCH BẢO TRÌ - KIỂM KÊ', functionName: 'getBTKKHtml', pageTitle: 'LỊCH BẢO TRÌ - KIỂM KÊ', icon: 'fas fa-tools' },
                { 
                    id: 'btnTimKiem', text: 'TÌM THÔNG TIN', icon: 'fas fa-search', isDropdown: true, 
                    subItems: [
                        { id: 'btnTimSieuThi', text: 'TÌM KIẾM SIÊU THỊ', functionName: 'getTimSieuThiHtml', icon: 'fas fa-store-alt' },
                        { id: 'btnHangBK', text: 'TÌM HÀNG BACKUP', functionName: 'getHangBKHtml', pageTitle: 'TÌM HÀNG HÓA BACKUP MIỀN', icon: 'fas fa-box-open' },
                        { id: 'btnStaffInfo', text: 'THÔNG TIN NHÂN VIÊN', functionName: 'getStaffInfoHtml', pageTitle: 'THÔNG TIN NHÂN VIÊN', icon: 'fas fa-users' }
                    ] 
                }
            ]
        },
        {
            title: 'TÀI LIỆU & HƯỚNG DẪN',
            items: [
                { id: 'btnTaiLieuITs', text: 'TÀI LIỆU IT', functionName: 'getPhanMemHtml', pageTitle: 'TÀI LIỆU IT', icon: 'fas fa-book-open' },
                { id: 'btnDashboard', text: 'BẢNG ĐIỀU KHIỂN', functionName: 'getDashboardHtml', pageTitle: 'BẢNG ĐIỀU KHIỂN CHÍNH', icon: 'fas fa-tachometer-alt' },
                { 
                    id: 'btnHuongDanIT', text: 'HƯỚNG DẪN IT', icon: 'fas fa-question-circle', isDropdown: true, 
                    subItems: [
                        { id: 'btnTGDD', text: 'TGDD & ĐMX', functionName: 'getTGDDHtml', pageTitle: 'Thế Giới Di Động & Điện Máy Xanh', icon: 'fas fa-mobile-alt' },
                        { id: 'btnBachHoaXanh', text: 'BÁCH HÓA XANH', functionName: 'getBachHoaXanhHtml', pageTitle: 'BÁCH HÓA XANH', icon: 'fas fa-store' },
                        { id: 'btnAvakid', text: 'AVAKID', functionName: 'getAvakidHtml', pageTitle: 'AVAKID', icon: 'fas fa-child' },
                        { id: 'btnAnKhang', text: 'AN KHANG', functionName: 'getAnKhangHtml', pageTitle: 'AN KHANG', icon: 'fas fa-pills' },
                        { id: 'btnKhoVp', text: 'KHO/VP', functionName: 'getKhoVpHtml', pageTitle: 'KHO/VP', icon: 'fas fa-warehouse' }
                    ] 
                },
                { id: 'btnCaiDatITs', text: 'PHẦN MỀM & ỨNG DỤNG', functionName: 'getPhanMem1Html', pageTitle: 'PHẦN MỀM & ỨNG DỤNG', icon: 'fas fa-download' }
            ]
        }
    ];
    
    const rightMenuData = [
        {
            title: "TRANG CÔNG VIỆC",
            icon: "fas fa-briefcase",
            items: [
                { text: "Báo cáo nội bộ", href: "https://baocaonoibo.com", icon: "fas fa-chart-bar", className: "primary" },
                { text: "New Ticket", href: "https://newticket.tgdd.vn/ticket", icon: "fas fa-ticket-alt", className: "success" },
                { text: "Google Docs", href: "https://docs.google.com/", icon: "fas fa-file-alt", className: "info" },
                { text: "Google Sheets", href: "https://sheets.google.com/", icon: "fas fa-file-excel" },
                { text: "Google Drive", href: "https://drive.google.com/", icon: "fas fa-cloud" },
            ]
        },
        {
            title: "GIẢI TRÍ",
            icon: "fas fa-gamepad",
            items: [
                { text: "YouTube", href: "https://youtube.com", icon: "fab fa-youtube" },
                { text: "Zing MP3", href: "https://zingmp3.vn", icon: "fas fa-music" },
                { text: "Facebook", href: "https://facebook.com", icon: "fab fa-facebook" },
                { text: "VnExpress", href: "https://vnexpress.net", icon: "fas fa-newspaper" },
            ]
        }
    ];
    
    // =================================================================================
    // =========== PHẦN 2: KHAI BÁO BIẾN, DOM ELEMENTS VÀ TRẠNG THÁI ==================
    // =================================================================================

    // DOM Elements
    const functionContent = document.getElementById('functionContent');
    const loadingSpinner = document.getElementById('loadingSpinner');
    const currentPageTitle = document.getElementById('current-page-title');
    const leftSidebarContainer = document.getElementById('left-sidebar-container');
    const rightSidebarContainer = document.getElementById('right-sidebar-container');
    const leftSidebarContentWrapper = leftSidebarContainer.querySelector('.sidebar-content-wrapper');
    const rightSidebarContentWrapper = rightSidebarContainer.querySelector('.sidebar-content-wrapper');
    const homeConfirmModal = document.getElementById('homeConfirmModal');
    const customConfirmModal = document.getElementById('customConfirmModal');
    
    const adminLoginModal = document.getElementById('adminLoginModal');
    const adminUsername = document.getElementById('adminUsername');
    const adminPassword = document.getElementById('adminPassword');
    const adminLoginError = document.getElementById('adminLoginError');
    const adminLoginSubmit = document.getElementById('adminLoginSubmit');
    const adminLoginCancel = document.getElementById('adminLoginCancel');
    
    // State & Timers
    let dropdownTimeout;
    let leftSidebarTimeout;
    let rightSidebarTimeout;
    let inactivityTimer;
    const HIDE_DELAY = 300; // ms


    let isAdminAuthenticated = false; // Biến kiểm tra trạng thái đã xác thực Admin hay chưa
    
    // =================================================================================
    // =============== PHẦN 3: CÁC HÀM KHỞI TẠO VÀ HIỂN THỊ MENU ======================
    // =================================================================================

    /**
     * Tạo và hiển thị menu bên trái từ dữ liệu `leftMenuData` (ĐÃ CẬP NHẬT CHO YÊU CẦU No.1)
     */
    function renderLeftMenu() {
        leftSidebarContentWrapper.innerHTML = '';
        leftMenuData.forEach((section) => {
            const sectionDiv = document.createElement('div');
            sectionDiv.className = 'menu-section';
            sectionDiv.innerHTML = `<h3 class="menu-section-title"><span>${section.title}</span></h3>`;

            const menuItemsContainer = document.createElement('div');
            menuItemsContainer.className = 'menu-items-container';

            section.items.forEach(item => {
                if (item.isDropdown) {
                    const dropdownDiv = document.createElement('div');
                    dropdownDiv.className = 'dropdown';
                    
                    const dropdownButton = document.createElement('div');
                    dropdownButton.className = `dropdown-button ${item.className || ''}`;
                    dropdownButton.innerHTML = `<i class="${item.icon} icon"></i><span>${item.text}</span>`;
                    dropdownButton.id = item.id;

                    const dropdownMenu = document.createElement('div');
                    dropdownMenu.className = 'dropdown-menu';

                    item.subItems.forEach(subItem => {
                        const subLink = document.createElement('a');
                        subLink.href = '#';
                        subLink.id = subItem.id;
                        subLink.className = `menu-button-sidebar ${subItem.className || ''}`;
                        subLink.innerHTML = `<i class="${subItem.icon} icon"></i><span>${subItem.text}</span>`;
                        subLink.addEventListener('click', (e) => {
                            e.preventDefault();
                            hideAllDropdowns();
                            loadFunctionContent(subItem.functionName, subItem.pageTitle);
                            collapseSidebar(leftSidebarContainer);
                        });
                        dropdownMenu.appendChild(subLink);
                    });

                    dropdownDiv.appendChild(dropdownButton);
                    dropdownDiv.appendChild(dropdownMenu);
                    menuItemsContainer.appendChild(dropdownDiv);
                    
                    const showMenu = () => {
                        hideAllDropdowns();
                        const rect = dropdownButton.getBoundingClientRect();
                        dropdownMenu.style.top = rect.top + 'px';
                        dropdownMenu.style.left = (rect.right + 10) + 'px';
                        dropdownMenu.classList.add('show');
                        dropdownButton.classList.add('active');
                    };

                    if (item.isAdmin) {
                        dropdownButton.style.cursor = 'pointer';
                        dropdownButton.addEventListener('click', () => {
                            if (isAdminAuthenticated) {
                                showMenu();
                            } else {
                                hideAllDropdowns();
                                adminLoginError.textContent = '';
                                adminLoginModal.style.display = 'flex';
                                adminUsername.focus();
                            }
                        });
                         dropdownDiv.onmouseleave = () => { 
                            dropdownTimeout = setTimeout(() => {
                                dropdownMenu.classList.remove('show');
                                dropdownButton.classList.remove('active');
                            }, 300); 
                        };
                         dropdownMenu.onmouseenter = () => clearTimeout(dropdownTimeout);
                    } else {
                        const hideMenu = () => {
                            dropdownMenu.classList.remove('show');
                            dropdownButton.classList.remove('active');
                        };
                        dropdownButton.onmouseenter = () => { clearTimeout(dropdownTimeout); showMenu(); };
                        dropdownButton.onmouseleave = () => { dropdownTimeout = setTimeout(hideMenu, 300); };
                        dropdownMenu.onmouseenter = () => { clearTimeout(dropdownTimeout); };
                        dropdownMenu.onmouseleave = () => { dropdownTimeout = setTimeout(hideMenu, 300); };
                    }

                } else {
                    const a = document.createElement('a');
                    a.href = '#';
                    a.id = item.id;
                    a.className = `menu-button-sidebar ${item.className || ''}`;
                    a.innerHTML = `<i class="${item.icon} icon"></i><span>${item.text}</span>`;
                    a.addEventListener('click', (e) => {
                        e.preventDefault();
                        hideAllDropdowns();
                        loadFunctionContent(item.functionName, item.pageTitle);
                        collapseSidebar(leftSidebarContainer);
                    });
                    menuItemsContainer.appendChild(a);
                }
            });
            sectionDiv.appendChild(menuItemsContainer);
            leftSidebarContentWrapper.appendChild(sectionDiv);
        });
    }

    /**
     * Tạo và hiển thị menu bên phải từ dữ liệu `rightMenuData`
     */
    function renderRightMenu() {
        rightSidebarContentWrapper.innerHTML = '';
        rightMenuData.forEach(section => {
            const title = document.createElement('h3');
            title.innerHTML = `<i class="${section.icon}"></i><span>${section.title}</span>`;
            
            const menuSection = document.createElement('div');
            menuSection.className = 'right-menu-section';

            section.items.forEach(item => {
                const link = document.createElement('a');
                link.href = item.href;
                link.target = '_blank';
                link.className = `link-button-right ${item.className || ''}`;
                link.innerHTML = `<i class="${item.icon} icon"></i><span>${item.text}</span>`;
                menuSection.appendChild(link);
            });
            
            rightSidebarContentWrapper.appendChild(title);
            rightSidebarContentWrapper.appendChild(menuSection);
        });
    }

    // =================================================================================
    // ===================== PHẦN 4: CÁC HÀM LÕI VÀ TIỆN ÍCH ==========================
    // =================================================================================

    /**
     * Tải nội dung chính từ Google Apps Script
     */
    function loadFunctionContent(functionName, pageTitle) {
        functionContent.innerHTML = '';
        loadingSpinner.style.display = 'block';
        currentPageTitle.textContent = pageTitle;
        
        google.script.run
            .withSuccessHandler(htmlString => {
                loadingSpinner.style.display = 'none';
                functionContent.innerHTML = htmlString;
                Array.from(functionContent.querySelectorAll('script')).forEach(oldScript => {
                    const newScript = document.createElement('script');
                    Array.from(oldScript.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value));
                    newScript.appendChild(document.createTextNode(oldScript.innerHTML));
                    oldScript.parentNode.replaceChild(newScript, oldScript);
                });
            })
            .withFailureHandler(error => {
                loadingSpinner.style.display = 'none';
                functionContent.innerHTML = `<p style="color: red; text-align: center;">Lỗi tải nội dung: ${error.message}</p>`;
                console.error("Lỗi tải nội dung:", error);
            })
            [functionName]();
    }
    
function goToHomePage() {
        // Thay vì gọi trang chủ cũ, ta gọi thẳng trang thông báo mới
        loadFunctionContent('getThongBaoPageHtml', 'CÔNG CỤ QUẢN LÝ CÔNG VIỆC');
    }

    function collapseSidebar(sidebarElement) {
        sidebarElement.classList.add('collapsed');
        hideAllDropdowns();
    }
    function expandSidebar(sidebarElement) {
        sidebarElement.classList.remove('collapsed');
    }
    
    function hideAllDropdowns() {
        document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
            menu.classList.remove('show');
            const parentButton = menu.previousElementSibling;
            if (parentButton?.classList.contains('dropdown-button')) {
                parentButton.classList.remove('active');
            }
        });
    }

    function showHomeConfirm() {
        hideAllDropdowns();
        homeConfirmModal.style.display = 'flex';
    }
    function hideHomeConfirm() {
        homeConfirmModal.style.display = 'none';
    }

    function updateClock() {
        const now = new Date();
        const clockTime = document.getElementById('clock-time');
        const clockDate = document.getElementById('clock-date');
        clockTime.textContent = now.toLocaleTimeString('vi-VN');
        clockDate.textContent = now.toLocaleDateString('vi-VN', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });
    }

    function forceLogout(message) {
        if (inactivityTimer) clearTimeout(inactivityTimer);
        alert(message);
        const overlay = document.createElement('div');
        overlay.style.cssText = 'position:fixed; top:0; left:0; width:100%; height:100%; background:white; z-index:9999; display:flex; justify-content:center; align-items:center; font-size:1.2rem; color:#555;';
        overlay.innerHTML = 'F5 để đăng nhập lại...';
        document.body.appendChild(overlay);

        google.script.run
            .withSuccessHandler(() => window.top.location.reload(true))
            .withFailureHandler(error => {
                console.error("Lỗi khi gọi logoutUser, vẫn tiến hành tải lại trang: ", error);
                window.top.location.reload(true);
            })
            .logoutUser();
    }

    function resetInactivityTimer() {
        clearTimeout(inactivityTimer);
        inactivityTimer = setTimeout(() => {
            forceLogout('Bạn đã bị đăng xuất do không hoạt động trong 30 phút.');
        }, 1800000); // 30 phút
    }

    // =================================================================================
    // ========================= PHẦN 5: XỬ LÝ SỰ KIỆN =================================
    // =================================================================================

    /**
     * Xử lý logic đăng nhập của Admin
     */
/**
 * (No.2) Xử lý logic đăng nhập của Admin bằng cách gọi hàm server-side
 */
function handleAdminLogin() {
    const username = adminUsername.value.trim();
    const password = adminPassword.value;

    if (!username || !password) {
        adminLoginError.textContent = 'Vui lòng nhập đầy đủ thông tin.';
        return;
    }

    // Vô hiệu hóa nút bấm và hiển thị trạng thái loading
    adminLoginSubmit.disabled = true;
    adminLoginSubmit.textContent = 'Đang kiểm tra...';
    adminLoginError.textContent = ''; // Xóa lỗi cũ

    google.script.run
        .withSuccessHandler(response => {
            // Kích hoạt lại nút bấm
            adminLoginSubmit.disabled = false;
            adminLoginSubmit.textContent = 'Đăng nhập';

            if (response.success) {
                isAdminAuthenticated = true;
                adminLoginModal.style.display = 'none';
                adminUsername.value = '';
                adminPassword.value = '';
                // Tự động kích hoạt sự kiện click để mở menu ngay sau khi đăng nhập thành công
                document.getElementById('btnADMIN').click();
            } else {
                isAdminAuthenticated = false;
                adminLoginError.textContent = response.message || 'Lỗi không xác định.';
                adminPassword.value = '';
                adminUsername.focus();
            }
        })
        .withFailureHandler(error => {
            // Kích hoạt lại nút bấm
            adminLoginSubmit.disabled = false;
            adminLoginSubmit.textContent = 'Đăng nhập';

            // Hiển thị lỗi kết nối
            isAdminAuthenticated = false;
            adminLoginError.textContent = 'Lỗi kết nối: ' + error.message;
            console.error('Admin Login Error:', error);
        })
        .verifyAdminLogin(username, password);
}

    // Sự kiện khi tài liệu được tải xong
    document.addEventListener('DOMContentLoaded', function() {
      
        // --- 1. Render Menus ---
        renderLeftMenu();
        renderRightMenu();
        
        // --- 2. Sidebar Hover Logic ---
        leftSidebarContainer.addEventListener('mouseenter', () => { clearTimeout(leftSidebarTimeout); expandSidebar(leftSidebarContainer); });
        leftSidebarContainer.addEventListener('mouseleave', () => { leftSidebarTimeout = setTimeout(() => collapseSidebar(leftSidebarContainer), HIDE_DELAY); });
        rightSidebarContainer.addEventListener('mouseenter', () => { clearTimeout(rightSidebarTimeout); expandSidebar(rightSidebarContainer); });
        rightSidebarContainer.addEventListener('mouseleave', () => { rightSidebarTimeout = setTimeout(() => collapseSidebar(rightSidebarContainer), HIDE_DELAY); });
        
        // --- 3. Header & Modal Buttons ---
        document.getElementById('btnGoHomeHeader').addEventListener('click', goToHomePage);
        document.getElementById('confirmHomeYes').addEventListener('click', goToHomePage);
        document.getElementById('confirmHomeNo').addEventListener('click', hideHomeConfirm);
        
        // --- Admin Login Modal Events ---
        adminLoginSubmit.addEventListener('click', handleAdminLogin);
        adminLoginCancel.addEventListener('click', () => {
            adminLoginModal.style.display = 'none';
        });
        adminPassword.addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                handleAdminLogin();
            }
        });

        // --- 4. Logout Button & Modal ---
        const logoutButton = document.getElementById('logoutButton');
        const confirmBtnYes = document.getElementById('confirmBtnYes');
        const confirmBtnNo = document.getElementById('confirmBtnNo');

        logoutButton.addEventListener('click', () => {
            customConfirmModal.style.display = 'flex';
        });
        confirmBtnNo.addEventListener('click', () => {
            customConfirmModal.style.display = 'none';
        });
        confirmBtnYes.addEventListener('click', () => {
            customConfirmModal.style.display = 'none';
            google.script.run
                .withSuccessHandler(() => {
                    google.script.run.withSuccessHandler(url => {
                        window.top.location.href = url;
                    }).getWebAppUrl();
                })
                .withFailureHandler(error => {
                    alert('Lỗi khi đăng xuất: ' + error.message);
                    console.error('Logout error:', error);
                })
                .logoutUser();
        });
        
        // --- 5. Support Popup ---
        const supportContactButton = document.getElementById('supportContactButton');
        const supportContactPopup = document.getElementById('supportContactPopup');
        const closeSupportPopup = document.getElementById('closeSupportPopup');
        supportContactButton.addEventListener('click', () => supportContactPopup.classList.toggle('show'));
        closeSupportPopup.addEventListener('click', () => supportContactPopup.classList.remove('show'));
        
        // --- 6. Hide Popups/Dropdowns on outside click ---
        document.addEventListener('click', (event) => {
            if (!event.target.closest('.dropdown')) {
                hideAllDropdowns();
            }
            if (!supportContactPopup.contains(event.target) && !supportContactButton.contains(event.target)) {
                supportContactPopup.classList.remove('show');
            }
        });
        
        // --- 7. Clock & Initial Load ---
        updateClock();
        setInterval(updateClock, 1000);
        goToHomePage(); // Load home page on start
        setInterval(() => { // Auto-refresh home page
            if (currentPageTitle.textContent.includes('CHÀO MỪNG')) {
                goToHomePage();
            }
        }, 300000); // 5 minutes

        // --- 8. Session & Inactivity Management ---
google.script.run
    .withSuccessHandler(details => {
        const userNameDisplay = document.getElementById('userNameDisplay');
        if (details.isAdmin) {
            // Cập nhật giao diện cho Admin
            userNameDisplay.innerHTML = `Xin chào, ${details.fullName} <i class="fas fa-user-shield"></i>`;
            userNameDisplay.style.color = 'var(--danger-color)'; // Màu đỏ cho Admin
            userNameDisplay.style.fontWeight = '700';
            
            // Đặt trạng thái đã xác thực
            isAdminAuthenticated = true;
        } else {
            // Giao diện cho user thường
            userNameDisplay.innerHTML = `Xin chào, ${details.fullName}`;
            isAdminAuthenticated = false;
        }
    })
    .withFailureHandler(error => {
        document.getElementById('userNameDisplay').textContent = 'Guest';
        console.error('Error getting user details:', error);
    })
    .getUserSessionDetails();
            
        // Inactivity logout
        ['load', 'mousemove', 'mousedown', 'touchstart', 'click', 'keydown', 'scroll'].forEach(evt => 
            window.addEventListener(evt, resetInactivityTimer, true)
        );
        
        // Concurrent session check
        const clientSessionId = sessionStorage.getItem('appSessionId');
        if (!clientSessionId) {
            forceLogout('Phiên làm việc không hợp lệ. Vui lòng đăng nhập lại.');
        } else {
            setInterval(() => {
                google.script.run
                    .withSuccessHandler(response => {
                        if (!response.isValid) {
                            forceLogout(response.message || 'Phiên của bạn đã hết hạn do có đăng nhập từ nơi khác.');
                        }
                    })
                    .verifySession(clientSessionId);
            }, 10000); // Check every 10 seconds
        }
    });
    </script>
</body>
</html>